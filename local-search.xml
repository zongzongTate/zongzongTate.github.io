<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>数据库#1</title>
    <link href="/2022/07/02/database1/"/>
    <url>/2022/07/02/database1/</url>
    
    <content type="html"><![CDATA[<p>本文的内容全部基于我校老师所发的数据库复习提纲</p><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a><strong>一、概述</strong></h2><p>1、E-R图的表示方法</p><ul><li>矩形框表示实体</li><li>椭圆框表示属性</li><li>实心线段连接实体与属性</li><li>菱形框表示实体之间的联系</li></ul><p>2、实体之间的联系形式</p><ul><li>一对一（1 1）</li><li>一对多（1 n）</li><li>多对多（m n）</li></ul><p>3、理解概念模型、逻辑模型、物理模型</p><ul><li>概念模型：现实世界到机器世界的一个中间层次。现实世界到信息世界的第一层抽象，用于信息世界的建模</li><li>逻辑模型：一种图形化的展现方式，将概念模型具体化。（有层次、网状和关系模型）</li><li>物理模型：描述数据是如何在计算机中存储的，如何表达记录结构、记录顺序、访问路径等信息。将逻辑模型的内容在具体的物理介质上实现。</li></ul><p>4、什么叫数据与程序的物理独立性？什么叫数据与程序的逻辑独立性？为什么数据库系统具有数据与程序的独立性？</p><ul><li>物理独立性：当数据的内模式改变了，即存储结构改变了，只需要管理员对模式&#x2F;内模式英雄做改变就可以保持模式不变。应用程序不必修改。</li><li>逻辑独立性：当模式改变时，如增加关系、属性时，数据库管理员对外模式&#x2F;模式映像做相应改变，就可以保证外模式不变。应用程序不必修改。</li><li>为什么：数据的定义和描述可以从应用程序分离。简化了应用程序的编制，大大减少了应用程序的维护和修改</li></ul><p>5、数据库管理系统的主要管理功能？</p><ul><li>数据组织、存储和管理</li><li>数据操作</li><li>数据库运行管理</li><li>不太清楚所谓的主要管理功能。自行总结如上。定义、保护、维护和通信的功能应该不算管理。自己看着办吧</li></ul><p>6、E-R图绘制</p><ul><li><del>懂得都懂，不懂得我也不好多说什么了</del></li></ul><h2 id="二、关系代数"><a href="#二、关系代数" class="headerlink" title="二、关系代数"></a><strong>二、关系代数</strong></h2><p>1、理解关系代数基本运算</p><ul><li>并</li><li>差</li><li>交</li><li>笛卡尔积</li><li>选择</li><li>投影</li><li>连接</li><li>除运算</li></ul><p>2、关系表有多个候选键，但只能选定其中一个做为主键</p><p>3、投影和选择运算要重点掌握，投影后，元组数量不发生变化，选择后，属性数量不发生变化</p><p>4、理解自然连接、外连接（左、右、全）</p><ul><li>自然连接：一种特殊的等值连接。相等的必须是公共属性,属性名也要相同。会除去重复属性。</li><li>外连接：保留悬浮元组的连接。悬浮元组即俩关系在自然连接时被舍弃的元组。左外保留左边关系的悬浮元组，右外保留右边、全外保留全部</li></ul><p>5、理解主键、外键的概念及关系</p><ul><li>主键：一列或多列的组合，值能唯一标识的每一行，不可为空。保证实体完整性。</li><li>外键：关系间引用时用到。某关系中的码与另一关系（也可以是自己）的主码对应，即为外码（键）。</li><li>关系：外键和其对应的主键可以不同名，但一般同名。此外，外码可取空，但一空全空，表示含义具体分析。</li></ul><p>6、能用关系代数表达对关系表的查询操作</p><ul><li><del>不会的都突突了吧</del></li></ul><h2 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a><strong>SQL</strong></h2><blockquote><p>sql章节所占分数最多</p></blockquote><p>1、要掌握单表查询、多表连接查询、嵌套查询、分组运算、排序、选择、投影等操作。</p><blockquote><p>去吃个饭，回来继续写</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>复习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大二下期末复习-算法#1（线性规划和递归树）</title>
    <link href="/2022/06/29/algorithm1/"/>
    <url>/2022/06/29/algorithm1/</url>
    
    <content type="html"><![CDATA[<p>6.29下午考试，很急了。</p><p>想白兰，但条件不允许。</p><h2 id="单纯形法解线性规划"><a href="#单纯形法解线性规划" class="headerlink" title="单纯形法解线性规划"></a><strong>单纯形法解线性规划</strong></h2><blockquote><p>仅讲述大致思路</p></blockquote><ol><li>化为标准型。如下图。</li></ol><p><img src="/image/algorithm1/1656432963243.png" alt="标准型图"></p><ol><li>选定基变量。有几个等式就有几个基变量。</li><li>得出初始可行解。</li><li>根据目标函数的系数做出基入基操作。</li><li>得出新的可行解。</li><li>观察目标函数的各项系数，重复4、5，直到检验数（目标函数经过变基后的项系数）都小于等于0</li><li>此时的可行解即为最优解</li></ol><p>各种特殊情况：</p><ul><li>若检验数的某项为0，说明有无穷解。</li><li>退化问题。没有深入理解。但解决办法应该是保证基变量不能取0。因为保证单纯形法收敛的充分条件是：在迭代过程中的每个基本可行解的基变量数值都严格大于0。<del>看着来，我不是很会</del></li><li>某个决策变量的系数都小于0。代表这个区间无穷大。<del>但其实我也不知道无穷大意味着什么，无解吗</del></li><li>对于小于0的决策变量，用他的相反数来替代。</li><li>确定初始基本可行解。对于原问题的约束已经是标准型但没有基变量，可以人工添加变量作为基变量，随后进行入基出基操作，若最后的最优解中仍有人工添加的变量则代表无解。</li></ul><p>大致如上，可能有些许差错，自行判断。<del>真的很想摆</del></p><h2 id="递归树"><a href="#递归树" class="headerlink" title="递归树"></a><strong>递归树</strong></h2><blockquote><p>已经自己学习了无数次的内容，但是总是很快就忘掉了。再总结一次</p></blockquote><p>从一个例子入手也许会更容易理解和记忆</p><p>比如这个例子<strong>T(n) &#x3D; T(n&#x2F;3) + T(2n&#x2F;3) + n</strong></p><p>方程右部的两项不一样，无法合并。递归迭代法不行（<del>已经忘记了递归迭代法，但好像不考</del>），递归树行</p><p>直接进行一个递归树的看。</p><p><img src="/image/algorithm1/1656434478658.png" alt="递归树"></p><p>设这棵树的层数为k</p><p>这不是一棵平衡树，我们直接用最高层代表k。每一层都会变成上一层的2&#x2F;3。</p><p>有n*(2&#x2F;3)<sup>k</sup>&#x3D;1，因为到达最底层的时候，叶子节点对应的数为1。可得k&#x3D;log<sub>3&#x2F;2</sub>n</p><p>又可以得出，每层的复杂度都是O（n），<del>每一层都是Cn，C是常熟</del></p><p>因此T（n）&#x3D;kO（n）&#x3D;log<sub>3&#x2F;2</sub>nO(n)&#x3D;O(nlogn)</p><p>关键点：</p><ul><li>层数</li><li>每层的复杂度（或者说是和）</li></ul><p><del>感觉不难，就是容易忘</del></p><p>最后贴个图来方便理解吧</p><p><img src="/image/algorithm1/1656435873274.png" alt="递归树"></p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>复习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大二下期末复习-计算机网络#2（试卷）</title>
    <link href="/2022/06/26/net2/"/>
    <url>/2022/06/26/net2/</url>
    
    <content type="html"><![CDATA[<style>hide {  background-color: #d6d6d6;  color: #d6d6d6;}hide:hover {  background-color: white;  color: black;}</style><p>0# 计算机网络复习记录（试卷篇）</p><blockquote><p>内容杂乱无章却没有严格的顺序，仅用于个人复习记录</p></blockquote><h2 id="本校考试中的题目总结"><a href="#本校考试中的题目总结" class="headerlink" title="本校考试中的题目总结"></a>本校考试中的题目总结</h2><blockquote><p>仅针对本校复习网站给出的卷子</p></blockquote><p>问题不分类了。直接按试卷顺序列出。</p><p>CDMA工作原理：<hide>码分多址。不分频道、时隙。信息传输靠不同的码型。操作起来就是将站点的芯片序列中的1变+1，0变-1，得到站点序列。当获得某个序列时，通过该序列和站点序列进行笛卡尔积操作即可获取到站点发送的信息。</p><p>海明码纠错原理：<hide>跟CRC类似。对于m位码字，检验位数要求 2<sup>r</sup> &gt;&#x3D; m+r+1 其中r为校验位。而后校验位放置在1 2 4 8 16 ……位上，将对应位的数据计算并记录。接收方验证时重新计算并验证即可。错误位是校验位加起来的和。</p><p>OSPF的五种报文：<hide>hello、DD、LSR、LSU、LSAck。</p><p>OSPF里的LSA：<hide>链路状态报告，列出了路由器的链路或接口，并指明它们的状态和沿每条链路方向出站的开销，以及该链路上所有已知的OSPF邻居。</p><p>OSPF里报文的作用：<hide>对应上述的顺序。发现、协商、维护（周期）OSPF邻居；数据库描述，携带LSA摘要；请求缺少的LSA；携带LSA信息的报文；确认收到LSU的报文，也携带了LSA摘要。</p><p>OSPF里的七种状态：<hide>down（机器启动）、init（初始）、2-way（双向）、exstart（准启动）、exchange（交换）、loading（装载）、full（完全毗邻）按顺序就是一般的状态变换顺序</p><p>将mac地址转换为eui-64地址：<hide>1、在mac地址中间插入0xFFFE，形成64位。2、将第一字节的第7位反转。例：00-AA-00-3F-2A-1C -&gt; 00-AA-00-FF-FE-3F-2A-1C -&gt; 02-AA-00-FF-FE-3F-2A-1C -&gt; 2AA:FF:FE3F:2A1C</p><p>网桥工作原理：<hide>泛洪、学习、转发、过滤</p><p>万维网由哪三部分组成：<hide>Url、http、html</p><p>IPv6头部有但IPv4头部没有的域：<hide>流标签</p><p>OSI参考模型的最上层：<hide>应用层</p><p>带宽和吞吐量的基本单位：<hide>bps</p><p>TCP段头中的窗口数大小怎么决定：<hide>拥塞窗口和接受方允许的窗口共同决定。取最小值。</p><p>BGP协议是什么：<hide>距离矢量路由选择协议。且克服了路由自环问题</p><p>回退n帧的信道利用率高还是选择性重传高：<hide>选择性重传</p><p>PSTN（公共交换电话网）组成部分：<hide>电话、端局、干线</p><p>现代电话系统的核心是：<hide>PCM</p><p>电话系统的时间间隔：<hide>125μs</p><p>RIP的度量：<hide>跳数</p><p>会增大冲突域的设备：<hide>集线器</p><p>广播地址和网络地址的特征：<hide>广播：主机位全1，网络：主机位全0</p><p>D类地址的子网掩码：<hide>D类地址是广播地址，没有子网掩码，没有缺省网关</p><p>如何判断ip地址是否合法：<hide>1、看是否是A、B、C类地址。2、看是否是回环地址（127开头）。3、看是否有超过256的数字出现。4、看网络位</p><p>OSPF的度量：<hide>带宽</p><p>抗电磁干扰的传输介质：<hide>光纤</p><p>从未通信过的主机的通信步骤：<hide>封装、arp请求、信息发送、mac寻址到第一个路由器、到达对应子网、mac寻址、信息到达、解封装</p><p>调制器调试方法：<hide>同相调幅、同幅调频</p><p>tcp数据段最大长度为65535，为什么最大载荷只有65495：<hide>tcp要封装进ip分组，ip分组的最大载荷只有65515，tcp数据段最小段头还有20，所以最大载荷是65495</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>复习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大二下期末复习-计算机网络#1（试卷）</title>
    <link href="/2022/06/25/net1/"/>
    <url>/2022/06/25/net1/</url>
    
    <content type="html"><![CDATA[<style>hide {  background-color: #d6d6d6;  color: #d6d6d6;}hide:hover {  background-color: white;  color: black;}</style><h1 id="计算机网络复习记录（试卷篇）"><a href="#计算机网络复习记录（试卷篇）" class="headerlink" title="计算机网络复习记录（试卷篇）"></a>计算机网络复习记录（试卷篇）</h1><blockquote><p>内容杂乱无章却没有严格的顺序，仅用于个人复习记录</p></blockquote><h2 id="本校考试中的题目总结"><a href="#本校考试中的题目总结" class="headerlink" title="本校考试中的题目总结"></a>本校考试中的题目总结</h2><blockquote><p>仅针对本校复习网站给出的卷子</p></blockquote><p><strong>基本概念题：</strong></p><ul><li>什么是对等通信：<hide>参考模型的任意一层收到的数据和发出方对等层上发出的数据一样</li><li>PPP协议中的PAP认证是否可靠，为什么？：<hide>不可靠，因为PAP只需进行一次验证。用户名和密码的传送方式是明文的。CHAP采用周期性验证，安全性更高。</li><li>什么是波特率：<hide>每秒信号变幻的次数</li><li>交换机：<hide>交换机是目前常用的二层设备。具有智能帧过滤功能。</li><li>RFC：<hide>Request for comment，用来记录各种标准，是在线的技术报告</li><li>10base-t：<hide>10Mbps&#x2F;s，双绞线</li><li>10base-2：<hide>10Mbps&#x2F;s，200米有效传输距离，用的同轴电缆</li><li>10base-f：<hide>f是光纤的意思</li><li>基带传输和频带传输的区别：<hide>基带传输是信号传输，频带传输是模拟信号传输</li></ul><p><strong>osi参考模型的相关问题：</strong></p><ul><li>osi模型中据链路层的主要作用：<hide>1、成帧。2、差错控制。3、流量控制。4、链路控制。5、mac寻址。6、区分数据和控制信息。7、透明传输</li><li>osi模型中应用层的网络应用程序分为哪两类：<hide>直接网络应用和间接网络应用。</li><li>类似于osi的网络系体系结构分层的概念和作用：<hide>保持网络灵活，易于修改，把相关的网络功能组合在一层中。</li><li>ip协议是哪一层的：<hide>网络层</li><li>tcp协议是哪一层的：<hide>传输层</li><li>arp协议是哪一层的：<hide>数据链路层</li><li>telnet协议是哪一层的：<hide>应用层</li><li>ftp协议是哪一层的：<hide>应用层</li><li>icmp协议是哪一层的的：<hide>网络层</li></ul><p><strong>以太网的相关问题：</strong> </p><ul><li>物理拓扑结构：<hide>星型</li><li>逻辑拓扑结构：<hide>总线型</li><li>介质访问控制方式：<hide>CSMA&#x2F;CD方法（带有冲突检测的载波侦听多路存取）</li></ul><p><strong>UDP相关问题</strong></p><ul><li>可靠性：<hide>不可靠</li><li>是否有连接建立：<hide>没有</li><li>流量控制在什么层实现：<hide>不提供流量控制</li><li>广播还是单播： <hide>广播</li><li>类似于电路交换还是分组交换：<hide>分组交换</li></ul><p><strong>TCP相关问题</strong></p><ul><li>可靠性：<hide>可靠</li><li>是否有连接建立：<hide>有</li><li>广播还是单播：<hide>单播</li><li>流量控制在什么层实现：<hide>滑动窗口、传输层</li><li>类似于电路交换还是分组交换：<hide>电路交换</li></ul><p><strong>MAC地址的相关问题</strong></p><ul><li>高24位代表：<hide>生产厂商的标识</li></ul><p><strong>ip的相关问题</strong></p><ul><li>私有地址的特征：A类：<hide>10.0.0.0-10.255.255.255</hide> B类：<hide>172.16.0.0-172.31.255.255</hide> C类：<hide>192.168.0.0-192.168.255.255</hide> D类：<hide>D类没有私有地址，它的地址主要用于多点广播。</li><li>如何分类：<hide>A类：0开头。B类：10开头。C类：110开头。D类1110开头。</li><li>ipv4报文头中的TTL的作用：<hide>一个递减的计数器，防止报文在网络中永远保存</li><li>ipv6地址有几位：<hide>有128位</li><li>普通的ip网的服务方式和特点：<hide>尽力而为，先到先服务。</li><li>ipv4和ipv6定义的数据包的报头对比：<hide>ipv4字段多，但总长度少。ipv6反之。</li></ul><p><strong>UTP（非屏蔽双绞线）的相关问题</strong></p><ul><li>五类线的最大传输距离：<hide>100米</li></ul><p><strong>编码的相关问题：</strong></p><ul><li>全部码字中的海明距离指：<hide>任意两个码字的海明距离的最小值</li></ul><p><strong>路由的相关问题：</strong></p><ul><li>路由协议主要有哪两种：<hide>距离矢量</hide>和<hide>链路状态路由选择协议</li><li>什么是RIP：<hide>是一种距离矢量路由选择算法。目前仍然被广泛使用，但15跳的限制让它只适用于规模有限的网络。</li><li>OSPF基于什么方法：<hide>最短通路法和扩散法</li><li>缺省网关：<hide>即是默认网关。起代理arp作用。网关会用自己的mac地址和arp请求的目的ip对源计算机进行应答</li></ul><p><strong>介质访问控制协议相关问题</strong></p><ul><li>分隙ALOHA比纯ALOHA的主要改进之处：<hide>发送行为必须在时隙起始处，避免了在时隙中途冲突，提高了数据成功发送的概率，降低了冲突的危险。</li><li>CSMA&#x2F;CD协议是哪种方式的改进：<hide>1持续CSMA</li><li></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>复习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据结构作业记录#1</title>
    <link href="/2022/03/15/data-homework-1/"/>
    <url>/2022/03/15/data-homework-1/</url>
    
    <content type="html"><![CDATA[<h1 id="数据结构大作业"><a href="#数据结构大作业" class="headerlink" title="数据结构大作业"></a>数据结构大作业</h1><p>大二下的其中一个长期任务。ddl是2022年4月20日。</p><h2 id="作业内容"><a href="#作业内容" class="headerlink" title="作业内容"></a>作业内容</h2><p>在诸多项目中选取一项。并根据要求完成项目的开发。</p><p>我们是一个二人小组，选取的项目是疫情模拟。</p><h2 id="作业要求"><a href="#作业要求" class="headerlink" title="作业要求"></a>作业要求</h2><blockquote><h3 id="疫情模拟系统"><a href="#疫情模拟系统" class="headerlink" title="疫情模拟系统"></a>疫情模拟系统</h3><p>介绍：新冠疫情肆虐下，各国采取不同的防疫策略，得到了不同的防疫效果。现就不同种类的防疫策略进行疫情模拟，完成以下（不限于）功能：</p><ul><li>初始状态设置。<br>用图形界面完成，人群总数不小于1000，有家庭、封闭公共场所（模拟商场、影院、教室等）、开放空间、医院、疫情隔离区。初始参数包括：Rt传染指数，流动指数，0代病人数量，隔离速度等等。</li><li>不同防疫策略下疫情的发展过程展示。其中，防御策略可分为：<blockquote><p> （1）完全开放。基本上不加任何管控，也基本不接种疫苗。</p><p> （2）疫苗接种+基本不管控。号召人群接种疫苗，但对公众出行活动基本不管控。期望随着疫苗接种率的提升，疫情得到控制。</p><p> （3）疫苗接种+公共场所适度管控。在加大疫苗接种的同时，对公众场所和人群出行进行适度管控，比如中小学停课，娱乐场所部分关闭，以及呼吁人群带口罩及消毒。</p><p> （4）疫苗接种+公共场所适度管控+零容忍。除了（3）的措施以外，严格执行“零容忍”，只要发现病人，立即隔离，并做好密接者排查和区域大排查。</p><p>要求对以上四种防疫策略，模拟随时间推移的疫情传播情况。除动态图形化模拟外，还应该有动态统计结果，包括：正常人数、患病人数、隔离人数、死亡人数、疫苗接种率……</p></blockquote></li><li>做四种防疫策略的对比，用图表等方式进行对比，并得出结论。</li></ul></blockquote><h3 id="作业开发工具与环境"><a href="#作业开发工具与环境" class="headerlink" title="作业开发工具与环境"></a>作业开发工具与环境</h3><p>工具:   <code>Qt Creator</code></p><p>环境:   <code>Qmake version 3.1. using Qt5.12.10</code></p><p>编译器: <code>MSVC-2017-32/64-bit </code></p><p>版本控制：<code>git</code></p><h3 id="仓库地址"><a href="#仓库地址" class="headerlink" title="仓库地址"></a>仓库地址</h3><p><a href="https://gitee.com/zongzongtate/data-struct-homework">地址</a></p><blockquote><p>暂时还是私密仓库。 <strong>——2022.3.15</strong></p></blockquote><h3 id="开发日志"><a href="#开发日志" class="headerlink" title="开发日志"></a>开发日志</h3><blockquote><p>Tips：截止至2022.3.15</p></blockquote><p>2022.2.23</p><ul><li>仓库初始化。</li><li>添加说明和注意事项。</li><li>添加作业要求。</li></ul><p>2022.2.24</p><ul><li>项目创建。</li><li>新增Human类。</li><li>实现了简单的移动。</li><li>基于QPainter类和TimerEvent函数实现了人类可视化。</li><li>修改了注意事项。</li></ul><p>2022.2.28</p><ul><li>新增Area类。</li><li>基于QPainter类和TimerEvent函数实现了区域可视化。</li><li>基本区域的可视化。</li><li>基于QLabel类，给区域打上对应的名字标签。</li><li>新增AreaPainter类。将Area类实例的可视化封装进入AreaPainter类中。</li><li>将一部分硬编码改为常数表示。</li><li>新增Vec2类。用于表示坐标。</li><li>新增Area类的开放和封锁状态和对应函数。</li></ul><p>2022.3.2</p><ul><li>新增可视化的区域</li><li>修改了移动算法。使移动更加自然。</li><li>更改枚举变量表示。由于报错，将enum设置的若干个状态改为const int来定义。如果能解决错误，会在后续的更新中改回。</li><li>修改了Human类的可视化绘画逻辑。节省了内存开销。</li></ul><p>2022.3.6</p><ul><li>规范注释。</li><li>新增TimeController类的抽象模型。用于控制模拟中的时间。</li></ul><p>2022.3.7</p><ul><li>新增待办列表。</li><li>新增Model类。提供参数设置和调用的API。</li><li>新增可视化区域。</li><li>更改Model类为单例模式。</li></ul><p>2022.3.8</p><ul><li>新增开始窗口。</li><li>补全注释。</li></ul><p>2022.3.9</p><ul><li>Model类添加成员。接收Human实例数目。</li><li>新增开始窗口的参数设置控件。</li><li>删除Human类中的感染函数。新增InfectedChecker类，控制Human实例之间的感染。</li><li>新增Human类的状态判断，根据Human实例的状态而改变可视化颜色。</li><li>将测试用硬编码改为Model类表示。</li><li>完成了TimeController类的实现。</li></ul><p>2022.3.10</p><ul><li>新增简单的隔离效果。</li><li>新增Human类中简单的职业区分。</li><li>新增Human类中职业的行动模型。</li><li>完善感染算法。</li><li>完善开始界面。</li></ul><p>2022.3.14</p><ul><li>新增Human类的潜伏状态。</li><li>修复了几个bug</li><li>新增大路区域，使感染的逻辑性更强。</li><li>新增InfectedChecker类的人数统计。可以返回当前感染人数和潜伏期人数。</li><li>修改了时间计数</li><li>新增图表统计功能。</li><li>优化了图表坐标的设置</li><li>重构区域可视化算法</li></ul><p>2022.3.15</p><ul><li>重构了人类可视化算法。新增HumanPainter类，将Human类的可视化功能封装进HumanPainter类中。</li><li>重构图表统计算法。新增InfectedChart类，将图表功能封装进InfectedChart类中。</li><li>补全注释</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重新开始</title>
    <link href="/2022/03/15/restart/"/>
    <url>/2022/03/15/restart/</url>
    
    <content type="html"><![CDATA[<h1 id="重新开始"><a href="#重新开始" class="headerlink" title="重新开始"></a>重新开始</h1><p>之前其实有写过一个作为开头的文章。在年前定下了许多目标。但后来因为各种各样的原因，完成的情况并不理想。原本的博客也因为我的一些奇怪操作而炸了。</p><p>现在是打算重新开始。重新开始记录。</p><p>见证一下成长过程吧。</p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>近期计划#1</title>
    <link href="/2021/12/13/hello-world/"/>
    <url>/2021/12/13/hello-world/</url>
    
    <content type="html"><![CDATA[<h2 id="第一篇文章"><a href="#第一篇文章" class="headerlink" title="第一篇文章"></a>第一篇文章</h2><h3 id="关于这个博客"><a href="#关于这个博客" class="headerlink" title="关于这个博客"></a>关于这个博客</h3><p>从很久之前开始就想拥有一个自己的博客了。但是因为个人的畏难情绪一直没有真正行动起来。</p><blockquote><p>在 <a href="https://kiridore.github.io/about/">桐谷Dore</a> 的帮助下，终于是迈出了第一步。</p></blockquote><h3 id="为什么要开一个博客"><a href="#为什么要开一个博客" class="headerlink" title="为什么要开一个博客"></a>为什么要开一个博客</h3><p>作为一名学习计算机的在校大学生，如今已经是大二的年纪了。不幸的是，平常对于计算机的学习并没有深入，课程的学习也是囫囵吞枣。许多相关的专业知识基本一窍不通。也是在挂载这个博客的时候才第一次接触到git。这让我很不安，以至于感到了焦虑。</p><p>为了解决自己的烦恼、督促自己学习，我认为开一个博客进行记录是一个不错的选择。</p><h3 id="近期的计划"><a href="#近期的计划" class="headerlink" title="近期的计划"></a>近期的计划</h3><p>想做的事情有很多，在这里列出来慢慢完成吧。</p><ol><li>期末考试临近，需要完成以下科目的复习计划。<del>其实就是一科都没复习好</del>，</li></ol><ul><li>计算机组成（ ）</li><li>大物下（ ）</li><li>编译原理（ ）</li><li>数据结构（ ）</li><li>电工学（ ）<blockquote><p>上学期的我由于没有复习相关课程，在考前通宵复习才勉强避免挂科。</p></blockquote></li></ul><ol start="2"><li>11月期间，学习了一段时间的live2d模型的制作。但是后面由于事情的增多而搁置了。目标是在寒假期间完成学习，提高建模水平。</li></ol><ul><li>身体和头部九轴（ ）</li><li>身体挂件切换（ ）</li><li>嘴部制作（ ）<blockquote><p>学习live2d模型制作一是因为我个人对此十分感兴趣；二是因为目前虚拟主播对于live2d模型的需求依然很大，这或许会成为一个赚取外快的方式。<del>前提是我学的好</del></p></blockquote></li></ul><ol start="3"><li>cocos2dx引擎的学习与使用。想和 <a href="https://kiridore.github.io/about/">桐谷Dore</a> 一起制作一款长线放置游戏。目标是寒假期间能简单运用，并制作出一款能简单游玩的demo</li></ol><ul><li>待办事项有很多，目前仍然对此一窍不通。<blockquote><p>一切的一切都是因为遇到了一款十分对我们胃口的放置游戏—— <a href="http://idlegame.gitee.io/proto23/#">原型RPG</a> 然而，这款游戏的内容特别少，让我们十分失望，于是决定自己动手做一款。</p></blockquote></li></ul><h3 id="博客的更新"><a href="#博客的更新" class="headerlink" title="博客的更新"></a>博客的更新</h3><p>各方面的学习内容和近况都会视情况进行更新。期待时间的积累让我成长。</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
